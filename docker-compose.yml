# This file serves as the base to build on top on.
version: "3.8"
services:
  # https://hub.docker.com/r/jwilder/nginx-proxy
  nginx-proxy:
    # https://hub.docker.com/r/jwilder/nginx-proxy/tags
    image: jwilder/nginx-proxy:1.5-alpine

    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

    # https://www.baeldung.com/ops/docker-compose-restart-policies
    restart: always

     # Map http and https ports to host machine
    ports:
      - 80:80
      - 443:443

    # https://docs.docker.com/storage/volumes/
    # Define a named volume to persist data.
    # Define /var/run/docker.sock to scan docker containers
    volumes:
      - ./conf.d:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro

    # Reverse proxy network.
    networks:
      - default
      - nginxproxynet

  # https://hub.docker.com/r/nginxproxy/acme-companion
  companion:
    # https://hub.docker.com/r/nginxproxy/acme-companion/tags
    image: nginxproxy/acme-companion:2.2

    # https://www.baeldung.com/ops/docker-compose-restart-policies
    restart: always

    # https://docs.docker.com/compose/compose-file/05-services/#depends_on
    depends_on:
      - nginx-proxy

    # All configs should be set here as environment variable
    environment:
      DEFAULT_EMAIL: ${DEFAULT_EMAIL:?Missing environment variable see readme}

    # https://docs.docker.com/storage/volumes/
    # Define a named volume to persist data.
    # Define /var/run/docker.sock to scan docker containers
    volumes:
      - ./conf.d:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro

    # Reverse proxy network.
    networks:
      - default
      - nginxproxynet

volumes:
  conf:
  vhost:
  html:
  dhparam:
  certs:
  acme:

# Reverse proxy network. See: https://github.com/Good-Games-Munich/nginx
networks:
  nginxproxynet:
    name: nginxproxynet
